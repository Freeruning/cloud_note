<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
	
	<!-- 加载jdbc资源文件 -->
	<util:properties id="jdbc" location="classpath:jdbc.properties"/>
	
	<!-- 定义数据源 -->
	<bean id="ds" 
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="url" value="#{jdbc.url}"/>
		<property name="driverClassName" value="#{jdbc.driver}"/>
		<property name="username" value="#{jdbc.user}"/>
		<property name="password" value="#{jdbc.password}"/>
	</bean>
	
	<!-- 定义sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
      <property name="dataSource" ref="ds" />
      <!-- 在创建完当前的bean后,Spring会调用这个bean来扫描指定包下的XMl文件
      在扫描的过程中,它还会验证XML文件,如果该文件中含有语法或类名等错误,会导致扫描失败
      Spring会报sqlSessionFactory相关的错误
       -->
      <property name="mapperLocations" value="classpath:com/tarena/dao/*.xml"/>
    </bean>
    
    <!-- 扫描DAO组件 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
     <!-- 当前bean创建之后,Spring会调用它扫描指定包下的Mapper接口,然后
     调用MyBatis来实现这些接口 -->
       <property name="basePackage" value="com.tarena.dao" />
       <!-- 当前bean会扫描带有指定注解Mapper接口,该注解是需要自定义的,如果
       不配置这个条件,那么当前bena会扫描所有接口 -->
       <!--  <property name="annotationClass" 
           value="com.tarena.dao.MyBatisRepository"/>
	-->
	</bean>

	<!-- 开启IOC注解扫描 -->
	<context:component-scan base-package="com.tarena" />

	<!-- 开启MVC注解扫描 -->
	<mvc:annotation-driven />
	<mvc:interceptors>
	  <mvc:interceptor>
	  <!-- 所有controller所有方法都要拦截 -->
	   <mvc:mapping path="/**"/>
	   <mvc:exclude-mapping path="/login/register.do"/>
	   <mvc:exclude-mapping path="/login/checkLogin.do"/>
	   <bean class="com.tarena.controller.interceptor.LoginInterceptor"></bean>
	  </mvc:interceptor>
	</mvc:interceptors>

	<!-- 处理请求转发 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	<aop:aspectj-autoproxy proxy-target-class="true"/>
</beans>